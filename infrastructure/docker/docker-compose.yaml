version: '3'

networks:
  backend:
  frontend:

services:

  #ZOO-KEEPER SERVICE DISCOVERY FOR KAFKA
  zoo-keeper:
    image: confluentinc/cp-zookeeper:7.4.3
    hostname: zoo-keeper
    container_name: zoo-keeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  #CONFLUENT KAFKA FOR DATA MESSAGING
  kafka:
    image: confluentinc/cp-kafka:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo-keeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo-keeper

  #KEYCLOAK FOR STANDALONE AUTHORIZATION SERVER
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    hostname: keycloak
    ports:
      - "8080:8080"
    environment:
      DB_VENDOR: MONGO
      DB_ADDR: db
      DB_DATABASE: keycloak_db
      KEYCLOAK_HOST_NAME: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    depends_on:
      - mongodb


  #MONGODB FOR DATA RESOURCE
  mongodb:
    image: mongo:latest
    container_name: greethy_mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./db-data/mongodb:/data/db
    command: [--auth]
    environment:
      - MONGO_INITDB_DATABASE=GreethyDB
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password

  #REDIS FOR CACHE MEMORY
  redis:
    image: "redis:alpine"
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
