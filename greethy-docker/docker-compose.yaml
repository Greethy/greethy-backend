version: '3.3'

services:
# MESSAGE BROKER
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '22181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    container_name: kafka-ui
    depends_on:
     - kafka
    ports:
      - '8090:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # DATABASE-MONGODB
  mongodb:
    image: mongo:latest
    container_name: greethy-mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/mongodb/data
    environment:
      MONGODB_INITDB_ROOT_USERNAME: root
      MONGODB_INITDB_ROOT_PASSWORD: 123456

  # DATABASE-MYSQL
  mysql:
    image: mysql:8.2.0
    container_name: greethy-mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: keycloak
      MYSQL_USER: greethy
      MYSQL_PASSWORD: greethy_pass
    volumes:
      - mysql_data:/var/lib/mysql


  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  # RECOMMENDER SYSTEM
  worker:
    image: zhenghaoz/gorse-worker
    ports:
      - "8089:8089"
    command: >
      --master-host master --master-port 8086
      --http-host 0.0.0.0 --http-port 8089
      --log-path /var/log/gorse/worker.log
      --cache-path /var/lib/gorse/worker-cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - worker_data:/var/lib/gorse
    depends_on:
      - master
  server:
    image: zhenghaoz/gorse-server
    ports:
      - "8087:8087"
    command: >
      --master-host master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8087
      --log-path /var/log/gorse/server.log 
      --cache-path /var/lib/gorse/server_cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - server_data:/var/lib/gorse
    depends_on:
      - master
  master:
    image: zhenghaoz/gorse-master
    ports:
      - "8086:8086"
      - "8088:8088"
    environment:
      GORSE_CACHE_STORE: redis://redis:6379
      GORSE_DATA_STORE: mysql://gorse:gorse_pass@tcp(mysql:3306)/greethy
    command: >
      -c /config/config.toml
      --log-path /var/log/gorse/master.log 
      --cache-path /var/lib/gorse/master_cache.data
    volumes:
      - ./config/config.toml:/config/config.toml
      - gorse_log:/var/log/gorse
      - master_data:/var/lib/gorse
    depends_on:
      - redis
      - mysql

  #AUTHSERVER_KEYCLOAK
  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: greethy-keycloak
    ports:
      - "8080:8080"
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
#      KC_DB: mysql
#      KC_DB_URL_DATABASE: jdbc:mysql://localhost:3306/keycloak
#      KC_DB_USERNAME: greethy
#      KC_DB_PASSWORD: greethy_pass
      KC_HEALTH_ENABLED: true
#    depends_on:
#      - mysql
    volumes:
      - /home/keycloak/realm.json:/opt/keycloak/data/import/realm.json

volumes:
  mongodb_data:
  mysql_data:
  worker_data:
  server_data:
  master_data:
  gorse_log: