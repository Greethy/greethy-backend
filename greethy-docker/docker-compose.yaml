version: '3.3'

services:
  #AXON_SERVER
  axonserver:
    image: axoniq/axonserver
    hostname: greethy-axonserver
    volumes:
      - type: bind
        source: ./axon/data
        target: /axon/data
      - type: bind
        source: ./axon/events
        target: /axon/eventdata
      - type: bind
        source: ./axon/config
        target: /axon/config
        read_only: true
    ports:
      - '8024:8024'
      - '8124:8124'
    environment:
      - AXONIQ_AXONSERVER_DEVMODE_ENABLED=true

  #DATABASE_MONGODB
  mongodb:
    image: mongo:latest
    container_name: greethy-mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/mongodb/data
    environment:
      MONGODB_INITDB_ROOT_USERNAME: root
      MONGODB_INITDB_ROOT_PASSWORD: 123456

  #DATABASE_POSTGRE
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: gorse
      POSTGRES_USER: gorse
      POSTGRES_PASSWORD: gorse_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  #DATABASE_REDIS
  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  worker:
    image: zhenghaoz/gorse-worker
    restart: unless-stopped
    ports:
      - "8089:8089"
    command: >
      --master-host master --master-port 8086
      --http-host 0.0.0.0 --http-port 8089
      --log-path /var/log/gorse/worker.log
      --cache-path /var/lib/gorse/worker-cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - worker_data:/var/lib/gorse
    depends_on:
      - master

  server:
    image: zhenghaoz/gorse-server
    restart: unless-stopped
    ports:
      - "8087:8087"
    command: >
      --master-host master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8087
      --log-path /var/log/gorse/server.log 
      --cache-path /var/lib/gorse/server_cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - server_data:/var/lib/gorse
    depends_on:
      - master

  master:
    image: zhenghaoz/gorse-master
    restart: unless-stopped
    ports:
      - "8086:8086"
      - "8088:8088"
    environment:
      GORSE_CACHE_STORE: redis://redis:6379
      GORSE_DATA_STORE: postgres://gorse:gorse_pass@postgres/gorse?sslmode=disable
      # GORSE_DATA_STORE: mysql://gorse:gorse_pass@tcp(mysql:3306)/gorse
      # GORSE_DATA_STORE: mongodb://root:password@mongo:27017/gorse?authSource=admin&connect=direct
      # GORSE_DATA_STORE: clickhouse://gorse:gorse_pass@clickhouse:8123/gorse
    command: >
      -c /config/config.toml
      --log-path /var/log/gorse/master.log 
      --cache-path /var/lib/gorse/master_cache.data
    volumes:
      - ./config/config.toml:/config/config.toml
      - gorse_log:/var/log/gorse
      - master_data:/var/lib/gorse
    depends_on:
      - redis
      - postgres

  #AUTHSERVER_KEYCLOAK
#  keycloak:
#    image: quay.io/keycloak/keycloak
#    container_name: greethy-keycloak
#    ports:
#      - "8080:8080"
#    command:
#      - start-dev
#      - --import-realm
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#      KC_DB: postgres
#      KC_DB_URL_HOST: postgres
#      KC_DB_URL_DATABASE: keycloak
#      KC_DB_USERNAME: keycloak
#      KC_DB_PASSWORD: password
#      KC_HEALTH_ENABLED: true
#    depends_on:
#      - postgres
#    volumes:
#      - /home/keycloak/realm.json:/opt/keycloak/data/import/realm.json

volumes:
  axonserver-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/axon/data
      o: bind
  axonserver-events:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/axon/events
      o: bind
  axonserver-config:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/axon/config
      o: bind
  mongodb_data:
  postgres_data:
  worker_data:
  server_data:
  master_data:
  gorse_log: